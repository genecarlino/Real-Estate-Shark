{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cavan\\\\real-state-sharks-v1.0\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: 'Maintenance type 1',\n    day: 'today',\n    reminder: true\n  }, {\n    id: 2,\n    text: 'Maintenance type 2',\n    day: 'today',\n    reminder: true\n  }, {\n    id: 3,\n    text: 'Maintenance type 3',\n    day: 'today',\n    reminder: true\n  }]); //toggle reminder\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  }; //Delete Task\n\n\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  }; //if statement impedded in the code with the > 0 ? = if : = then\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTask, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 27\n    }, this) : 'No Tasks']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"6MSZ/51QS8KktNz3aJLWAFA714c=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/cavan/real-state-sharks-v1.0/src/App.js"],"names":["useState","Header","Tasks","AddTask","App","tasks","setTasks","id","text","day","reminder","toggleReminder","map","task","deleteTask","filter","length"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,MAAMC,GAAG,GAAG,MAAK;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAE,CAChC;AACIO,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,oBAFV;AAGIC,IAAAA,GAAG,EAAE,OAHT;AAIIC,IAAAA,QAAQ,EAAE;AAJd,GADgC,EAOhC;AACIH,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,oBAFV;AAGIC,IAAAA,GAAG,EAAE,OAHT;AAIIC,IAAAA,QAAQ,EAAE;AAJd,GAPgC,EAahC;AACIH,IAAAA,EAAE,EAAE,CADR;AAEIC,IAAAA,IAAI,EAAE,oBAFV;AAGIC,IAAAA,GAAG,EAAE,OAHT;AAIIC,IAAAA,QAAQ,EAAE;AAJd,GAbgC,CAAF,CAAlC,CADa,CAqBb;;AACA,QAAMC,cAAc,GAAIJ,EAAD,IAAQ;AAC7BD,IAAAA,QAAQ,CAACD,KAAK,CAACO,GAAN,CAAWC,IAAD,IAAUA,IAAI,CAACN,EAAL,KAAYA,EAAZ,GAC3B,EAAC,GAAGM,IAAJ;AAAUH,MAAAA,QAAQ,EAAE,CAACG,IAAI,CAACH;AAA1B,KAD2B,GACWG,IAD/B,CAAD,CAAR;AAED,GAHD,CAtBa,CA0Bb;;;AAEA,QAAMC,UAAU,GAAIP,EAAD,IAAQ;AACzBD,IAAAA,QAAQ,CAACD,KAAK,CAACU,MAAN,CAAcF,IAAD,IAAUA,IAAI,CAACN,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GAFD,CA5Ba,CA+Bf;;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAFF,EAGGF,KAAK,CAACW,MAAN,GAAe,CAAf,gBAAmB,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEX,KAAd;AAAqB,MAAA,QAAQ,EAChDS,UADmB;AACP,MAAA,QAAQ,EAAEH;AADH;AAAA;AAAA;AAAA;AAAA,YAAnB,GAC0C,UAJ7C;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAxCD;;GAAMP,G;;KAAAA,G;AA0CN,eAAeA,GAAf","sourcesContent":["import { useState } from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\nconst App = () =>{\n    const [tasks, setTasks] = useState ([\n        {\n            id: 1,\n            text: 'Maintenance type 1',\n            day: 'today',\n            reminder: true,\n        },\n        {\n            id: 2,\n            text: 'Maintenance type 2',\n            day: 'today',\n            reminder: true,\n        },\n        {\n            id: 3,\n            text: 'Maintenance type 3',\n            day: 'today',\n            reminder: true,\n        },\n    ])\n    //toggle reminder\n    const toggleReminder = (id) => {\n      setTasks(tasks.map((task) => task.id === id \n      ? {...task, reminder: !task.reminder} : task ))\n    }\n    //Delete Task\n\n    const deleteTask = (id) => {\n      setTasks(tasks.filter((task) => task.id !== id))\n    }\n  //if statement impedded in the code with the > 0 ? = if : = then\n  return (\n    <div className='container'>\n      <Header/>\n      <AddTask />\n      {tasks.length > 0 ? <Tasks tasks={tasks} onDelete=\n      {deleteTask} onToggle={toggleReminder}/> : 'No Tasks'}\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}