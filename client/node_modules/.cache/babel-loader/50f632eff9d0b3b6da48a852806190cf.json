{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\cavan\\\\real-state-sharks-v1.0\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\cavan\\\\real-state-sharks-v1.0\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport { setAlert } from \"./alert\";\nimport { SIGNUP_SUCCESS, SIGNUP_FAIL, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from \"./types\";\nexport var login = function login(email, password) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var config, body, res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              config = {\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              };\n              body = JSON.stringify({\n                email: email,\n                password: password\n              });\n              _context.prev = 2;\n              _context.next = 5;\n              return axios.post(\"\".concat(process.env.REACT_APP_API_URL, \"/api/token/\"), body, config);\n\n            case 5:\n              res = _context.sent;\n              dispatch({\n                type: LOGIN_SUCCESS,\n                payload: res.data\n              });\n              dispatch(setAlert(\"Authenticated successfully\", \"success\"));\n              _context.next = 14;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](2);\n              dispatch({\n                type: LOGIN_FAIL\n              });\n              dispatch(setAlert(\"Error Authenticating\", \"error\"));\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 10]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var signup = function signup(_ref2) {\n  var name = _ref2.name,\n      email = _ref2.email,\n      password = _ref2.password,\n      password2 = _ref2.password2;\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var config, body, res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              config = {\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              };\n              body = JSON.stringify({\n                name: name,\n                email: email,\n                password: password,\n                password2: password2\n              });\n              _context2.prev = 2;\n              _context2.next = 5;\n              return axios.post(\"\".concat(process.env.REACT_APP_API_URL, \"/api/accounts/signup\"), body, config);\n\n            case 5:\n              res = _context2.sent;\n              dispatch({\n                type: SIGNUP_SUCCESS,\n                payload: res.data\n              });\n              dispatch(login(email, password));\n              _context2.next = 14;\n              break;\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](2);\n              dispatch({\n                type: SIGNUP_FAIL\n              });\n              dispatch(setAlert(\"Error Authenticating\", \"error\"));\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[2, 10]]);\n    }));\n\n    return function (_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nexport var logout = function logout() {\n  return function (dispatch) {\n    dispatch(setAlert(\"logout successful.\", \"success\"));\n    dispatch({\n      type: LOGOUT\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/cavan/real-state-sharks-v1.0/src/actions/auth.js"],"names":["axios","setAlert","SIGNUP_SUCCESS","SIGNUP_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","login","email","password","dispatch","config","headers","body","JSON","stringify","post","process","env","REACT_APP_API_URL","res","type","payload","data","signup","name","password2","logout"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n  SIGNUP_SUCCESS,\r\n  SIGNUP_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n} from \"./types\";\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_API_URL}/api/token/`,\r\n      body,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert(\"Authenticated successfully\", \"success\"));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n    });\r\n\r\n    dispatch(setAlert(\"Error Authenticating\", \"error\"));\r\n  }\r\n};\r\n\r\nexport const signup = ({ name, email, password, password2 }) => async (\r\n  dispatch\r\n) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ name, email, password, password2 });\r\n\r\n  try {\r\n    const res = await axios.post(\r\n      `${process.env.REACT_APP_API_URL}/api/accounts/signup`,\r\n      body,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: SIGNUP_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(login(email, password));\r\n  } catch (err) {\r\n    dispatch({\r\n      type: SIGNUP_FAIL,\r\n    });\r\n\r\n    dispatch(setAlert(\"Error Authenticating\", \"error\"));\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  dispatch(setAlert(\"logout successful.\", \"success\"));\r\n  dispatch({ type: LOGOUT });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}