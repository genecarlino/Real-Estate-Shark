{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\cavan\\\\real-state-sharks-v1.0\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\cavan\\\\real-state-sharks-v1.0\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport { PROPERTY_LIST_FAIL, PROPERTY_LIST_REQUEST, PROPERTY_LIST_SUCCESS } from \"./types\";\nexport var listProperties = function listProperties() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var _yield$axios$get, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              dispatch({\n                type: PROPERTY_LIST_REQUEST\n              });\n              _context.next = 4;\n              return axios.get(\"/api/v1/properties/all/\");\n\n            case 4:\n              _yield$axios$get = _context.sent;\n              data = _yield$axios$get.data;\n              dispatch({\n                type: PROPERTY_LIST_SUCCESS,\n                payload: data\n              });\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              dispatch({\n                type: PROPERTY_LIST_FAIL,\n                payload: _context.t0.response && _context.t0.response.data.message ? _context.t0.response.data.message : _context.t0.message\n              });\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 9]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["C:/Users/cavan/real-state-sharks-v1.0/src/actions/propertyActions.js"],"names":["axios","PROPERTY_LIST_FAIL","PROPERTY_LIST_REQUEST","PROPERTY_LIST_SUCCESS","listProperties","dispatch","type","get","data","payload","response","message"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,kBADF,EAEEC,qBAFF,EAGEC,qBAHF,QAIO,SAJP;AAMA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA;AAAA,wEAAM,iBAAOC,QAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEhCA,cAAAA,QAAQ,CAAC;AACPC,gBAAAA,IAAI,EAAEJ;AADC,eAAD,CAAR;AAFgC;AAAA,qBAKTF,KAAK,CAACO,GAAN,CAAU,yBAAV,CALS;;AAAA;AAAA;AAKxBC,cAAAA,IALwB,oBAKxBA,IALwB;AAOhCH,cAAAA,QAAQ,CAAC;AACPC,gBAAAA,IAAI,EAAEH,qBADC;AAEPM,gBAAAA,OAAO,EAAED;AAFF,eAAD,CAAR;AAPgC;AAAA;;AAAA;AAAA;AAAA;AAYhCH,cAAAA,QAAQ,CAAC;AACPC,gBAAAA,IAAI,EAAEL,kBADC;AAEPQ,gBAAAA,OAAO,EACL,YAAMC,QAAN,IAAkB,YAAMA,QAAN,CAAeF,IAAf,CAAoBG,OAAtC,GACI,YAAMD,QAAN,CAAeF,IAAf,CAAoBG,OADxB,GAEI,YAAMA;AALL,eAAD,CAAR;;AAZgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAN;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  PROPERTY_LIST_FAIL,\r\n  PROPERTY_LIST_REQUEST,\r\n  PROPERTY_LIST_SUCCESS,\r\n} from \"./types\";\r\n\r\nexport const listProperties = () => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: PROPERTY_LIST_REQUEST,\r\n    });\r\n    const { data } = await axios.get(\"/api/v1/properties/all/\");\r\n\r\n    dispatch({\r\n      type: PROPERTY_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PROPERTY_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}